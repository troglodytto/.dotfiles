alias cpoy='xclip -selection c'
alias pasta='xclip -selection c -o'
alias refresh='source ~/.zshrc'
alias python=python3
alias pip=pip3
alias mysql='docker run -it --network bridge --rm mysql mysql -h 172.17.0.1 -uroot -p'
alias psql='docker run -it --rm --network bridge postgres psql -h 172.17.0.1 -U postgres -W'
alias redis='docker run -ti --network bridge --rm redis redis-cli -h 172.17.0.1'
alias office='git config --local user.name "Piyush Upadhyay" && git config --local user.email piyush@rivi.co'
#alias vim=nvim
alias stv=solana-test-validator
alias sol-devnet='solana config set --url $SOLANA_DEVNET'
alias sol-localnet='solana config set --url http://localhost:8899'
alias ls='exa -l --icons'
alias cat=batcat
alias kilmux="tmux list-sessions | grep -v attached | awk 'BEGIN{FS=\":\"}{print $1}' | xargs -n 1 tmux kill-session -t"
alias grep=rg
alias du="dust -d 1"

what() {
  [ -s "README.md" ] && glow README.md && return;
  [ -s "README" ] && glow README && return;
  echo "No Description Found"
}

yarninit() {
  if [[ -s "package.json" ]]; then
      echo "\"package.json\" already exists"
      return
  fi

  yarn init

  if [ ! -s ".yarnrc" ] && [ ! -s ".yarnrc.yml" ]; then
    echo "nodeLinker: node-modules" > .yarnrc.yml
    echo "yarnPath: $HOME/.yarn/releases/yarn-3.2.0.cjs" >> .yarnrc.yml
  fi
}
